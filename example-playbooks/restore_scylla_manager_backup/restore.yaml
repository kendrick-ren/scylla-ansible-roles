---

- name: Gather important facts about Scylla nodes and a snapshot
  hosts: scylla_hosts
  become: true
  gather_facts: false
  tags:
    - gather_facts
  tasks:
    - name: Get seeds list
      shell: |
        grep '\- seeds:' /etc/scylla/scylla.yaml | awk '{ print $NF }' | tr -d '"' | tr -d "'"
      register: _seeds

    - name: Save seeds list as a fact
      set_fact:
        old_seeds: "{{ _seeds.stdout }}"

#    - name: Let's see our new facts
#      debug:
#        msg: "{{ inventory_hostname }} old seeds list is {{ old_seeds }}"

    - name: Get listen address
      shell: |
        grep "^\s*listen_address" /etc/scylla/scylla.yaml | cut -d":" -f2 | tr -d ' '
      register: _listen_address

    - name: Save listen_address as a fact
      set_fact:
        listen_address: "{{ _listen_address.stdout }}"

    - name: Get names of the tables in the snapshot {{ snapshot_tag }}
      shell: |
        scylla-manager-agent download-files -L {{ backup_location }} -n {{ host_id[inventory_hostname] }} -T {{ snapshot_tag }} --dump-manifest
      become_user: scylla
      vars:
        ansible_pipelining: true        
      register: _manifest_output

    - name: Parse table names from manifest
      set_fact:
        _tables_list:
           stdout_lines: "{{ (_manifest_output.stdout | from_json).index | map(attribute='keyspace') | zip((_manifest_output.stdout | from_json).index | map(attribute='table')) | map('join', '.') | list }}"

    - name: Save tables names list as a fact
      set_fact:
        all_tables: "{{ _tables_list.stdout_lines }}"

    - name: Save names of tables to restore as a fact
      set_fact:
        tables_to_restore: "{{ all_tables | reject('search', '^system(_|\\.)') | list }}"

- name: Restore a token ring - cluster's data is going to be wiped
  hosts: scylla_hosts
  become: true
  gather_facts: false
  tags:
    - restore_token_ring
  tasks:
    - name: Stop Scylla service
      service:
        name: scylla-server
        state: stopped

    - name: Remove Scylla directories
      file:
        path: "/var/lib/scylla/{{ item }}"
        state: absent
      loop:
        - data
        - commitlog
        - hints
        - view_hints

    - name: Recreate Scylla directories
      file:
        path: "/var/lib/scylla/{{ item }}"
        state: directory
        owner: scylla
        group: scylla
        mode: 0755
      loop:
        - data
        - commitlog
        - hints
        - view_hints

    - name: Get initial token
      shell: |
        scylla-manager-agent download-files -L {{ backup_location }} -n {{ host_id[inventory_hostname] }} -T {{ snapshot_tag }} --dump-tokens
      register: _initial_token

    - name: Set initial_token in scylla.yaml
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^(#\s*)?initial_token:'
        line: "initial_token: {{ _initial_token.stdout }}"
        create: yes

    - name: Make {{ groups.all[0] }} a seed
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^(\s+) - seeds:'
        line: |
          \g<1> - seeds: {{ groups.all[0] }}
        backrefs: yes
      when: inventory_hostname == groups.all[0]

    - name: Set seeds list to be {{ groups.all[0] }} plus a node itself
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^(\s+) - seeds:'
        line: |
          \g<1> - seeds: {{ groups.all[0] }},{{ inventory_hostname }}
        backrefs: yes
      when: inventory_hostname != groups.all[0]

- name: Start all nodes serially
  hosts: scylla_hosts
  become: true
  gather_facts: false
  serial: 1
  tags:
    - restore_token_ring
  tasks:
    - name: Start Scylla service on {{ inventory_hostname }}
      service:
        name: scylla-server
        state: started

    - name: Wait for CQL port on {{ inventory_hostname }}
      wait_for:
        port: 9042
        host: "{{ listen_address }}"

- name: Cleanup - restore the original cluster's configuration
  hosts: scylla_hosts
  become: true
  gather_facts: false
  tags:
    - restore_token_ring
  tasks:
    - name: Delete initial_token in scylla.yaml of {{ inventory_hostname }}
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^initial_token:'
        line: ""

    - name: Restore seeds list
      lineinfile:
        path: /etc/scylla/scylla.yaml
        regexp: '^(\s+) - seeds:'
        line: |
          \g<1> - seeds: {{ old_seeds }}
        backrefs: yes

- name: Restore schema from a backup snapshot {{ snapshot_tag }}
  hosts: scylla_manager
  become: true
  gather_facts: false
  tags:
    - restore_schema_from_backup
  tasks:
    - name: Run sctool restore command to restore schema only
      ansible.builtin.command:
        cmd: "sctool restore --cluster {{ scylla_manager_cluster_name }} -L {{ backup_location }} --snapshot-tag {{ snapshot_tag }} --restore-schema"

- name: Upload data from a backup snapshot {{ snapshot_tag }}
  hosts: scylla_hosts
  become: true
  gather_facts: false
  tags:
    - upload_snapshot
  tasks:
    - name: Download data
      shell: |
        scylla-manager-agent download-files -L {{ backup_location }} -n {{ host_id[inventory_hostname] }} -T {{ snapshot_tag }} -d {{ data_dir }} -K '*,!system_*,!!system.*' --mode upload
      become_user: scylla
      async: 604800
      poll: 5

    - name: refresh nodes with the restored data
      shell: |
        nodetool refresh {{ item.split('.') | join(' ') }} 
      with_items: "{{ tables_to_restore }}"
